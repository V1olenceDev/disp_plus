# Generated by Django 4.2.6 on 2023-10-14 20:41

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('Заказчик', 'Заказчик'), ('Диспетчер', 'Диспетчер'), ('Водитель', 'Водитель'), ('Начальник', 'Начальник')], max_length=20, verbose_name='Роль')),
                ('department', models.CharField(choices=[('ГКС', 'ГКС'), ('ЛЭС', 'ЛЭС'), ('СХМТРиСО', 'СХМТРиСО'), ('Общежитие', 'Общежитие'), ('ВПО', 'ВПО'), ('ЭВС', 'ЭВС'), ('Связь', 'Связь'), ('КЗ', 'КЗ'), ('ЗК', 'ЗК')], max_length=100, verbose_name='Служба')),
                ('phone_num', models.CharField(max_length=15, verbose_name='Номер телефона')),
                ('groups', models.ManyToManyField(blank=True, related_name='customuser_set', related_query_name='user', to='auth.group', verbose_name='Группа')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='customuser_set', related_query_name='user', to='auth.permission', verbose_name='Пермишены')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Transport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Вид транспорта')),
                ('status', models.CharField(choices=[('Доступно', 'Доступно'), ('Недоступно', 'Недоступно')], default='Доступно', max_length=15, verbose_name='Статус')),
            ],
            options={
                'verbose_name': 'Транспорт',
                'verbose_name_plural': 'Транспортные средства',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания заказа')),
                ('work_date', models.DateField(verbose_name='Плнируемая дата работ')),
                ('work_time', models.TimeField(verbose_name='Планируемое время работ')),
                ('reason', models.TextField(verbose_name='Причина заказа')),
                ('status', models.CharField(choices=[('Не рассматривалась', 'Не рассматривалась'), ('Находится на рассмотрении', 'Находится на рассмотрении'), ('Отклонена', 'Отклонена'), ('Принята', 'Принята')], default='Не рассматривалась', max_length=25, verbose_name='Статус заказа')),
                ('approved_vehicle', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_orders', to='api.transport', verbose_name='Подтвержденная техника')),
                ('assigned_driver', models.ForeignKey(blank=True, limit_choices_to={'role': 'Водитель'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_orders', to='api.customuser', verbose_name='Водитель')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_orders', to='api.customuser', verbose_name='Заказчик')),
                ('requested_vehicle', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='requested_orders', to='api.transport', verbose_name='Запрошенный транспорт')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
            },
        ),
    ]
